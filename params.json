{"name":"Rails-push-notifications","tagline":"Professional iOS and Android push notifications for Ruby On Rails","body":"# Rpn (Ruby on Rails Push Notifications)\r\n## Professional iOS and Android push notifications for Ruby on Rails\r\n\r\nRpn is an intuitive and easy to use gem that will allow you to easily add both iOS and Android Push Notifications.\r\n\r\nRpn supports:\r\n\r\n* Multiple Apple and Android applications/configurations\r\n* Single and Bulk notifications\r\n* Fully customizable notification's contents\r\n\r\n## Installation\r\nTo install the gem simply add this line to your Gemfile\r\n\r\n    gem 'ror_push_notifications', '= 1.0.0', git: 'https://github.com/calonso/ror-push-notifications.git'\r\n\r\nand then install it by running\r\n\r\n    $ bundle install\r\n\r\nOnce you have it installed, you need to generate the database migrations in order to build the required database structure and then run the newly generated migrations. So do it by executing:\r\n\r\n    $ rails generate ror_push_notifications:migrations\r\n    $ rake db:migrate\r\n\r\n## Applications setup\r\n\r\nFirst step when using Rpn is to setup Apple and/or Android applications to which the notifications will be associated to. Each platform has it's own details and process.\r\n\r\n### Apple Applications setup\r\n\r\nOnce you have configured your app as Apple Push Notifications Service enabled and you have requested and downloaded both the development and production certificates, it's time to convert them to a readable format (.pem) to import them into Rpn afterwards.\r\n\r\nTo convert the certificates the first you need is to export them as .p12 files. To do this:\r\n\r\n1. Open Keychain Application of your Macintosh computer\r\n2. Find the recently generated certificates. Click the disclosure button on the left of your certificate and select both the certificate and the contained key\r\n3. Right click and select 'Export 2 items...'. Then select the desired .p12 format and save it to your disk\r\n\r\nOnce exported, to convert it to the readable .pem format simply run:\r\n\r\n    $ openssl pkcs12 -in <your .p12 filename> -out <your output .pem filename>.pem -nodes -clcerts\r\n\r\nNow it's time to create our applications\r\n\r\n    app = Rpn::ApnsConfig.new\r\n    app.apns_dev_cert = File.read('path/to/your/development/certificate.pem')\r\n    app.apns_prod_cert = File.read('path/to/your/production/certificate.pem')\r\n    app.sandbox_mode = true\r\n    app.save\r\n\r\nAnd that's it!! You can create as many different applications as you want. Rpn gem supports it.\r\n\r\n### Android Applications setup\r\n\r\nThe only thing you need is the API_KEY that you will get from the Google APIS Console > API Access\r\n\r\n    app = Rpn::GcmConfig.new\r\n    app.api_key = '<your app api key>'\r\n    app.save\r\n\r\nThat's all. You have your applications' configurations stored in Rpn. Now it's time to start registering devices.\r\n\r\n## Registering devices\r\n\r\nDevices are associated to one single application.\r\n\r\n    app = # Find your Apple or Android app\r\n    app.devices.create guid: <iOS device token or Android registration id>\r\n\r\nSimple, isnt't it?\r\n\r\n## Creating notifications\r\n\r\n### iOS Notifications\r\n\r\nTo create new iOS notifications is as simple as\r\n\r\n    device = # Find your iOS device\r\n    app = device.config\r\n    alert = 'This is the alert message'\r\n    badge = 1\r\n    sound = 'true'\r\n    payload = { a: 1, b: 2, c:3 }\r\n    notification = Rpn::ApnsNotification.create_from_params! device, alert, badge, sound, payload\r\n    # Then, send the notifications\r\n    app.send_notifications\r\n\r\nThe generated notification will be something like this:\r\n\r\n    { aps: {\r\n        badge: 1,\r\n        sound: 'true',\r\n        alert: 'This is the alert message' },\r\n      a: 1,\r\n      b: 2,\r\n      c: 3 }\r\n\r\n### Android notifications\r\n\r\nTo create new Android notification the process is much the same as for the iOS ones:\r\n\r\n    device = # Find your Android device\r\n    app = device.config\r\n    payload = { a: 1, b: 2, c: 3, message: 'This is the alert message' }\r\n    notification = Rpn::GcmNotification.create_from_params! device, payload\r\n    # Finally, send the notifications\r\n    app.send_notifications\r\n\r\nThe generated Android notification will be something like this:\r\n\r\n    { registration_ids: [<registration id of the device>],\r\n      time_to_live: 2419200,\r\n      data: {\r\n        a: 1,\r\n        b: 2,\r\n        c: 3,\r\n        message: 'This is the alert message'\r\n      }\r\n    }\r\n\r\n### The Notifications Builder class\r\n\r\nAs you can see, much of the notification creation process is the same in both platforms, that's why I advice you to\r\ncreate a builder like the one provided at libs/rpn/notifications_builder.rb. This is only a starting point, you can use\r\nit as given or you may modify it to suit your needs.\r\n\r\nCreating notifications with the builder is similar to the previous examples but you can abstract your code from the\r\nnotification type. Special iOS parameters such as badge and sound are assigned default 1 and 'true' values respectively.\r\n\r\n    device = # Find your device\r\n    app = device.config\r\n    alert = 'This is the alert message'\r\n    payload = { a: 1, b: 2, c:3 }\r\n    notification = Rpn::NotificationsBuilder.create_notification! device, alert, payload\r\n    # Then, send the notifications\r\n    app.send_notifications\r\n\r\n## Creating bulk notifications\r\n\r\nLast but not least. Rpn gem is able to manage and send bulk notifications for both platforms in an easy way.\r\n\r\n### iOS bulk notifications\r\n\r\n    app = # Find your iOS application\r\n    tokens = app.devices.collect(&:guid)\r\n    alert = 'Alert message for bulk notification'\r\n    badge = 1\r\n    sound = 'true'\r\n    payload = { a: 1, b: 2, c:3 }\r\n    notification = Rpn::ApnsBulkNotification.create_from_params! tokens, app.id, alert, badge, sound, payload\r\n    # Now send the notifications\r\n    app.send_bulk_notifications\r\n\r\n### Android bulk notifications\r\n\r\n    app = # Find your iOS application\r\n    tokens = app.devices.collect(&:guid)\r\n    payload = { a: 1, b: 2, c: 3, message: 'Alert message for bulk notification' }\r\n    notification = Rpn::GcmBulkNotification.create_from_params! tokens, app.id, payload\r\n    # Now send the notifications\r\n    app.send_bulk_notifications\r\n\r\n### The Notifications Builder Class\r\n\r\nNow again, to try to simplify even more the bulk notifications creation, a method is given in the Rpn::NotificationsBuilder class.\r\nTo create bulk notifications, regarding only at the devices where you want to push, simply do:\r\n\r\n    devices = # Find your devices\r\n    device_ids = devices.pluck(:id)\r\n    alert = 'Alert message for bulk notification'\r\n    payload = { a: 1, b: 2, c: 3 }\r\n    Rpn::NotificationsBuilder.create_bulk_notification! device_ids, alert, payload\r\n\r\nAnd that's all!! Of course, you should run the notifications delivery process in worker threads or something similar.\r\n\r\nReleased under the MIT-LICENSE.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}